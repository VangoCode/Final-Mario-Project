int w = 800;
int h = 600;

int[][] blocks = {



/*platforms*/

  // FOR FIFTH NUMBER: 0 == ENEMY, 1 == FLOOR, 2 == PIPE, 3==WALL, 4 == QUESTION, 5== TILE, 6 == COIN
  // SIXTH NUMBER IS FOR COIN; 1 = COIN_BLOCK 0 = USED BLOCK / PLATFORM
  {
    0, h-30, 200, 30, 1, 0 // initial block
  }, 
  {
    -50, 0, 50, h, 3, 0 // back wall
  }, 
  {
    10700, 0, 50, h, 3, 0// end wall
  }, 
  // platforms
  {
    200, h-30, 200, 30, 1, 0
  }, 
  {
    400, h-30, 200, 30, 1, 0
  }, 
  {
    600, h-30, 200, 30, 1, 0
  }, 
  {
    800, h-30, 200, 30, 1, 0
  }, 
  {
    900, h-60, 200, 60, 1, 0
  }, 
  {
    1000, h-120, 200, 120, 1, 0
  }, 
  {
    1200, h-30, 200, 30, 1, 0
  }, 
  {
    1400, h-60, 200, 60, 1, 0
  }, 
  {
    1600, h-30, 200, 30, 1, 0
  }, 
  {
    1800, h-30, 200, 30, 1, 0
  }, 
  {
    2100, h-30, 200, 30, 1, 0
  }, 
  {
    2300, h-30, 200, 30, 1, 0
  }, 
  {
    2500, h-30, 200, 30, 1, 0
  }, 
  {
    2700, h-30, 200, 30, 1, 0
  }, 
  {
    2900, h-30, 200, 30, 1, 0
  }, 
  {
    3100, h-30, 200, 30, 1, 0
  }, 
  {
    3400, h-30, 200, 30, 1, 0
  }, 
  {
    3700, h-30, 200, 30, 1, 0
  }, 
  {
    3900, h-30, 200, 30, 1, 0
  }, 
  {
    4100, h-30, 200, 30, 1, 0
  }, 
  {
    4300, h-30, 200, 30, 1, 0
  }, 
  {
    4500, h-30, 200, 30, 1, 0
  }, 
  {
    4700, h-30, 200, 30, 1, 0
  }, 
  {
    5000, h-30, 200, 30, 1, 0
  }, 
  {
    5200, h-30, 200, 30, 1, 0
  }, 
  {
    5400, h-30, 200, 30, 1, 0
  }, 
  {
    5600, h-30, 200, 30, 1, 0
  }, 
  {
    5800, h-30, 200, 30, 1, 0
  }, 
  {
    6100, h-30, 200, 30, 1, 0
  }, 
  {
    6300, h-30, 200, 30, 1, 0
  }, 
  {
    6500, h-30, 200, 30, 1, 0
  }, 
  {
    6700, h-60, 200, 60, 1, 0
  }, 
  {
    6900, h-120, 200, 120, 1, 0
  }, 
  {
    7100, h-120, 200, 120, 1, 0
  }, 
  {
    7300, h-120, 200, 120, 1, 0
  }, 
  {
    7500, h-60, 200, 60, 1, 0
  }, 
  {
    7800, h-30, 200, 30, 1, 0
  }, 
  {
    8000, h-30, 200, 30, 1, 0
  }, 
  {
    8200, h-30, 200, 30, 1, 0
  }, 
  {
    8500, h-30, 200, 30, 1, 0
  }, 
  {
    8700, h-30, 200, 30, 1, 0
  }, 
  {
    8900, h-30, 200, 30, 1, 0
  }, 
  {
    9100, h-30, 200, 30, 1, 0
  }, 
  {
    9300, h-30, 200, 30, 1, 0
  }, 
  {
    9700, h-30, 200, 30, 1, 0
  }, 
  {
    9900, h-30, 200, 30, 1, 0
  }, 
  {
    10100, h-30, 200, 30, 1, 0
  }, 
  {
    10300, h-30, 200, 30, 1, 0
  }, 
  {
    10500, h-30, 200, 30, 1, 0
  }, 
  // pipes
  {
    2000, h-100, 100, 100, 2, 0
  }, 
  {
    3600, h-100, 100, 100, 2, 0
  }, 
  {
    4900, h-100, 100, 100, 2, 0
  }, 
  {
    8400, h-100, 100, 100, 2, 0
  }, 


  // question boxes
  {
    550, h-175, 30, 30, 4, 1
  }, {
    660, h-175, 30, 30, 4, 1
  }, {
    690, h-175, 30, 30, 4, 1
  }, {
    2600, h-175, 30, 30, 4, 1
  }, 
  {
    2740, h-175, 30, 30, 4, 1
  }, 
  {
    4380, h-175, 30, 30, 4, 1
  }, 
  {
    6300, h-175, 30, 30, 4, 1
  }, 
  {
    7300, h-265, 30, 30, 4, 1
  }, 

  // square tile boxes
  {
    1470, h-175, 30, 30, 5, 0
  }, 
  {
    1500, h-175, 30, 30, 5, 0
  }, 
  {
    1500, h-275, 30, 30, 5, 0
  }, 
  {
    1530, h-175, 30, 30, 5, 0
  }, 
  {
    2710, h-175, 30, 30, 5, 0
  }, 
  {
    2770, h-175, 30, 30, 5, 0
  }, 

  {
    2870, h-175, 30, 30, 5, 0
  }, 
  {
    2900, h-175, 30, 30, 5, 0
  }, 
  {
    3750, h-220, 30, 30, 5, 0
  }, 
  {
    3780, h-220, 30, 30, 5, 0
  }, 
  {
    3810, h-220, 30, 30, 5, 0
  }, 
  {
    3840, h-220, 30, 30, 5, 0
  }, 
  {
    3870, h-220, 30, 30, 5, 0
  }, 

  {
    4200, h-175, 30, 30, 5, 0
  }, 
  {
    4230, h-175, 30, 30, 5, 0
  }, 
  {
    4260, h-175, 30, 30, 5, 0
  }, 

  {
    4290, h-220, 30, 30, 5, 0
  }, 
  {
    4320, h-220, 30, 30, 5, 0
  }, 
  {
    4350, h-220, 30, 30, 5, 0
  }, 
  {
    4410, h-175, 30, 30, 5, 0
  }, 
  {
    4440, h-175, 30, 30, 5, 0
  }, 
  {
    5200, h-175, 30, 30, 5, 0
  }, 
  {
    5300, h-175, 30, 30, 5, 0
  }, 
  {
    5400, h-175, 30, 30, 5, 0
  }, 
  {
    8700, h-175, 30, 30, 5, 0
  }, 
  {
    8730, h-175, 30, 30, 5, 0
  }, 
  {
    8760, h-175, 30, 30, 5, 0
  }, 
  {
    8790, h-175, 30, 30, 5, 0
  }, 
  {
    9900, h-175, 30, 30, 5, 0
  }, 
  {
    9930, h-175, 30, 30, 5, 0
  }, 
  {
    9960, h-175, 30, 30, 5, 0
  }, 
  // COINS
  {
    850, h-130, 30, 30, 6, 0
  }, 
  {
    900, h-150, 30, 30, 6, 0
  }, 
  {
    940, h-150, 30, 30, 6, 0
  }, 
  {
    1050, h-190, 30, 30, 6, 0
  }, 
  {
    1100, h-210, 30, 30, 6, 0
  }, 
  {
    1140, h-210, 30, 30, 6, 0
  }, 
  {
    1970, h-150, 30, 30, 6, 0
  }, 
  {
    2020, h-180, 30, 30, 6, 0
  }, 
  {
    2050, h-180, 30, 30, 6, 0
  }, 
  {
    2100, h-150, 30, 30, 6, 0
  }, 
  {
    3570, h-150, 30, 30, 6, 0
  }, 
  {
    3620, h-180, 30, 30, 6, 0
  }, 
  {
    3650, h-180, 30, 30, 6, 0
  }, 
  {
    3700, h-150, 30, 30, 6, 0
  }, 
  {
    4870, h-150, 30, 30, 6, 0
  }, 
  {
    4920, h-180, 30, 30, 6, 0
  }, 
  {
    4950, h-180, 30, 30, 6, 0
  }, 
  {
    5000, h-150, 30, 30, 6, 0
  }, 
  {
    8370, h-150, 30, 30, 6, 0
  }, 
  {
    8420, h-180, 30, 30, 6, 0
  }, 
  {
    8450, h-180, 30, 30, 6, 0
  }, 
  {
    8600, h-150, 30, 30, 6, 0
  }, 
   //ENEMIES
  {
   1500, h-90, 30, 30, 0, 0
  },


};
int[][] rBlocks = new int[blocks.length][6];
boolean[] blockVisible = new boolean[blocks.length];
int[][] enemy = { 
  { // x, y, w, h, speed
    1500, h-90, 30, 30, 1
  },
  
};

float psizeW;
float psizeH;
float px;
float py;
float rx=px;
float ry=py;
float pxv=0;
float pyv=0;
float pspeed=5;
float gravity=0;
float bgSpeed;

boolean dead = false;
boolean debug = false;



PImage mario ;
PImage mLives;
PImage coin;

PImage platform[] = new PImage[blocks.length];


int currentFrame = 0;                 // current view of mario
String marioDir = "left";             // direction in which mario is facing

int numFrames = 12;   // the number of frames
PImage [] images = new PImage [numFrames]; //make the array
int[] nextLeftPic = {1, 2, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1};
int[] nextRightPic = {4, 4, 4, 4, 5, 6, 7, 5, 4, 4, 4, 4};

boolean falling = true;

int jumpPower = 12;
boolean colliding = true;

int bgX, bgX2;
PImage bg, bg_inverse;

int coins = 0;
int lives = 3;
int loseAlpha;
Boolean invincible = false;
